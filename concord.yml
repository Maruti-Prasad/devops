configuration:
  runtime: "concord-v2"

forms:
  AcceptForm:
  - SecretName: { label: "Name of the secret for change", type: "string",  placeholder: "Place name here" }
  - data: { label: "data", type: "string", inputType: "password" }
  - updatePassword: { label: "Accept for Password update job run", type: boolean }


flows:
  Akeyless:
  - form: AcceptForm
  - if: ${AcceptForm.updatePassword}
    then:
      - log: "[INFO] Accepted for Password update ..."
    else:
      - log: "[ERROR] Password update is not accepted ..."
      - exit

  - log: "${datetime.format(datetime.current(), 'dd_MM_yyyy')}"

  concord:
  - form: AcceptForm
  - if: ${AcceptForm.updatePassword}
    then:
      - log: "[INFO] Accepted for Password update ..."
    else:
      - log: "[ERROR] Password update is not accepted ..."
      - exit

  - log: "${datetime.format(datetime.current(), 'dd_MM_yyyy')}"
  - set:
    date: "${datetime.format(datetime.current(), 'dd_MM_yyyy')}"

  - log: "Get existing secret for ${AcceptForm.SecretName}"
  - task: concordSecrets
    in:
      action: getAsString
      name: ${AcceptForm.SecretName}
      ignoreErrors: false
    out: result
  - log: "Validate Result: ${result}"
  - if: ${result.status != "OK"}
    then:
      - throw: "${AcceptForm.SecretName} 'NOT_FOUND'"

  - log: "create backup secret"
  - task: concordSecrets
    in:
      action: create
      ignoreErrors: false
      name: "${AcceptForm.SecretName}_${date}"
      data: "${result.data}"
      createIfMissing: true

  - log: "print backup secret"
  - task: concordSecrets
    in:
      action: getAsString
      name: "${AcceptForm.SecretName}_${date}"
      ignoreErrors: false
    out: backup
  - log: "Validate Result: ${backup.data}"

  - task: concordSecrets
    in:
      action: update
      ignoreErrors: false
      name: "${AcceptForm.SecretName}"
      visibility: "PRIVATE"
      data: "${AcceptForm.data}"
